%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.17
%%CreationDate: Fri Jan  8 10:28:12 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAACAUGCCUCUUCCCUAUAACUAGGGAAGACUUGGCAUGUUUGAAGGCGGCACGCGCAGAGAGCCAAUUUGGAAAUCGGCCAAAUUGCCCUGGAAGAUCCAGG\
) } def
/len { sequence length } bind def

/coor [
[74.48215485 110.53366852]
[59.58358002 112.27506256]
[44.68500519 114.01645660]
[29.78643036 115.75784302]
[14.88785553 117.49923706]
[-0.01072000 119.24063110]
[-14.90929508 120.98202515]
[-29.80787086 122.72341919]
[-44.70644760 124.46481323]
[-59.60502243 126.20620728]
[-74.50359344 127.94760132]
[-89.40217590 129.68899536]
[-104.21060944 132.07859802]
[-118.90071869 135.11186218]
[-133.59082031 138.14512634]
[-148.28092957 141.17839050]
[-162.97103882 144.21165466]
[-177.66114807 147.24491882]
[-192.35125732 150.27818298]
[-207.04136658 153.31144714]
[-221.73149109 156.34471130]
[-233.61567688 167.64506531]
[-249.26544189 162.74433899]
[-252.58163452 146.68399048]
[-240.15284729 135.98551941]
[-224.76473999 141.65460205]
[-210.07463074 138.62133789]
[-195.38452148 135.58807373]
[-180.69441223 132.55480957]
[-166.00430298 129.52154541]
[-151.31419373 126.48828125]
[-136.62408447 123.45501709]
[-121.93398285 120.42175293]
[-107.24387360 117.38848877]
[-104.97261047 114.50074005]
[-101.11869812 112.64310455]
[-96.21838379 112.58032227]
[-91.14356232 114.79042053]
[-76.24498749 113.04902649]
[-61.34641647 111.30763245]
[-46.44784164 109.56623840]
[-31.54926491 107.82484436]
[-16.65068817 106.08345032]
[-1.75211370 104.34205627]
[13.14646149 102.60066223]
[28.04503632 100.85926819]
[42.94361115 99.11787415]
[57.84218597 97.37648773]
[72.74076080 95.63509369]
[79.26210022 74.41566467]
[101.90123749 61.78666306]
[103.64263153 46.88808823]
[105.38402557 31.98951149]
[96.60148621 18.56391716]
[101.75886536 3.37243891]
[116.89985657 -1.93132067]
[130.40959167 6.72122860]
[131.92456055 22.69259262]
[120.28260040 33.73090744]
[118.54120636 48.62948227]
[116.79981232 63.52805710]
[121.94662476 68.98336029]
[124.05875397 54.13280487]
[136.98620605 46.52484131]
[150.99453735 51.88829041]
[155.53541565 66.18445587]
[147.18954468 78.64826202]
[132.24024963 79.89396667]
[137.38705444 85.34926605]
[152.36167908 84.47709656]
[167.33630371 83.60491943]
[182.31092834 82.73274994]
[197.28555298 81.86057281]
[212.26017761 80.98840332]
[227.23480225 80.11623383]
[242.20941162 79.24405670]
[251.40177917 66.59358215]
[266.58752441 62.86167908]
[280.59640503 69.81043243]
[286.81387329 84.15885925]
[282.30419922 99.13206482]
[269.19674683 107.66016388]
[253.68043518 105.71644592]
[243.08158875 94.21868134]
[228.10696411 95.09085083]
[213.13233948 95.96302795]
[198.15773010 96.83519745]
[183.18310547 97.70736694]
[168.20848083 98.57954407]
[153.23385620 99.45171356]
[138.25923157 100.32389069]
[130.07992554 113.40956116]
[118.62602234 120.37620544]
[125.35800934 133.78068542]
[132.08999634 147.18518066]
[138.82199097 160.58967590]
[145.55397034 173.99415588]
[152.28596497 187.39865112]
[164.79776001 198.83943176]
[157.26770020 214.02937317]
[140.58685303 210.99859619]
[138.88146973 194.13064575]
[132.14949036 180.72615051]
[125.41749573 167.32165527]
[118.68550873 153.91717529]
[111.95352173 140.51268005]
[105.22153473 127.10819244]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 49]
[2 48]
[3 47]
[4 46]
[5 45]
[6 44]
[7 43]
[8 42]
[9 41]
[10 40]
[11 39]
[12 38]
[13 34]
[14 33]
[15 32]
[16 31]
[17 30]
[18 29]
[19 28]
[20 27]
[21 26]
[51 61]
[52 60]
[53 59]
[69 91]
[70 90]
[71 89]
[72 88]
[73 87]
[74 86]
[75 85]
[76 84]
[93 107]
[94 106]
[95 105]
[96 104]
[97 103]
[98 102]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
