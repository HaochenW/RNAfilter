%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.17
%%CreationDate: Fri Jan  8 10:28:12 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGUCGACACGGCGCUGGUCAACCAGCGCCCCCUGUUCGACUGCCCACCUUGCGUGAUAACCAGAGAUUUCACAUAGAAAUCUCCAAGCGUGCUAAGCACGCUU\
) } def
/len { sequence length } bind def

/coor [
[75.40155792 112.84213257]
[60.72321320 115.93180847]
[46.04486465 119.02149200]
[31.36651802 122.11116791]
[16.68817139 125.20085144]
[2.00982356 128.29052734]
[-12.66852379 131.38020325]
[-27.34687042 134.46989441]
[-41.97782135 137.77673340]
[-56.55816650 141.30003357]
[-70.32673645 155.87582397]
[-88.65401459 150.01898193]
[-103.00003052 154.39984131]
[-117.34604645 158.78068542]
[-131.69206238 163.16154480]
[-146.03807068 167.54238892]
[-160.38409424 171.92324829]
[-174.73010254 176.30409241]
[-189.07612610 180.68495178]
[-199.86256409 193.03746033]
[-215.89897156 189.60731506]
[-220.68844604 173.92315674]
[-209.30400085 162.11950684]
[-193.45697021 166.33892822]
[-179.11096191 161.95808411]
[-164.76493835 157.57722473]
[-150.41893005 153.19638062]
[-136.07290649 148.81552124]
[-121.72689819 144.43467712]
[-107.38088226 140.05381775]
[-93.03486633 135.67297363]
[-88.96351624 126.08688354]
[-80.05422211 120.27666473]
[-69.19712830 120.42176056]
[-60.08145905 126.71968079]
[-45.50111389 123.19639587]
[-39.64484787 118.49046326]
[-30.43655014 119.79154205]
[-15.75820255 116.70185852]
[-1.07985568 113.61218262]
[13.59849167 110.52249908]
[28.27683830 107.43282318]
[42.95518494 104.34314728]
[57.63353348 101.25346375]
[72.31188202 98.16378784]
[75.70855713 77.50030518]
[94.52602386 61.91919708]
[93.63742065 46.94554138]
[92.74880981 31.97188568]
[81.75553131 20.28738785]
[84.17918396 4.42846203]
[98.16053009 -3.43927932]
[112.97429657 2.71962047]
[117.25661469 18.18058014]
[107.72246552 31.08327484]
[108.61107635 46.05693054]
[109.49967957 61.03058624]
[115.59333801 65.40293121]
[114.83137512 50.42229843]
[126.06851959 40.48617172]
[140.84317017 43.07647705]
[148.02998352 56.24271011]
[142.21726990 70.07067108]
[127.78063965 74.14762878]
[133.87428284 78.51997375]
[148.34382629 74.56616211]
[162.81335449 70.61235809]
[177.28289795 66.65854645]
[191.75242615 62.70474243]
[206.22195435 58.75093460]
[220.69149780 54.79712677]
[235.16102600 50.84331894]
[244.33058167 37.67902374]
[260.34866333 36.78409958]
[270.92755127 48.84505463]
[267.95202637 64.60975647]
[253.70468140 71.98487854]
[239.11483765 65.31285095]
[224.64529419 69.26666260]
[210.17576599 73.22046661]
[195.70623779 77.17427826]
[181.23669434 81.12808228]
[166.76716614 85.08189392]
[152.29763794 89.03569794]
[137.82809448 92.98950195]
[131.99299622 108.52988434]
[121.14544678 117.96868896]
[129.52514648 130.40977478]
[137.90484619 142.85086060]
[146.28454590 155.29194641]
[154.66424561 167.73303223]
[163.04394531 180.17411804]
[171.42364502 192.61520386]
[179.80335999 205.05628967]
[193.66670227 214.81558228]
[188.12655640 230.83879089]
[171.19587708 229.95082092]
[167.36227417 213.43598938]
[158.98255920 200.99490356]
[150.60285950 188.55381775]
[142.22315979 176.11273193]
[133.84346008 163.67164612]
[125.46376038 151.23056030]
[117.08406067 138.78947449]
[108.70436096 126.34838867]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 45]
[2 44]
[3 43]
[4 42]
[5 41]
[6 40]
[7 39]
[8 38]
[9 36]
[10 35]
[12 31]
[13 30]
[14 29]
[15 28]
[16 27]
[17 26]
[18 25]
[19 24]
[47 57]
[48 56]
[49 55]
[65 85]
[66 84]
[67 83]
[68 82]
[69 81]
[70 80]
[71 79]
[72 78]
[87 105]
[88 104]
[89 103]
[90 102]
[91 101]
[92 100]
[93 99]
[94 98]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
