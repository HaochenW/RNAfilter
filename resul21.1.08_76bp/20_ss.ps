%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.17
%%CreationDate: Fri Jan  8 10:28:12 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGACUGAACUGUCGACUGGCACAACAGUGCCAGGUCCUUACAGUUCAGUCGCCAGGGCACGCCAGUAAUGCCUGUCUCUAUCGACAGAACCCGUCUACGACGGGU\
) } def
/len { sequence length } bind def

/coor [
[70.60213470 108.37483215]
[55.60872269 108.81933594]
[40.61531067 109.26383209]
[25.62189674 109.70833588]
[10.62848377 110.15283203]
[-4.36492825 110.59733582]
[-19.35834122 111.04183197]
[-34.35175323 111.48633575]
[-49.34516525 111.93083191]
[-64.33857727 112.37533569]
[-79.33199310 112.81983185]
[-94.32540131 113.26433563]
[-110.80102539 124.69153595]
[-127.52892303 115.18527222]
[-142.46966553 116.51720428]
[-157.41041565 117.84914398]
[-172.32978821 119.40233612]
[-187.22450256 121.17642975]
[-202.11921692 122.95053101]
[-217.01394653 124.72462463]
[-231.90866089 126.49872589]
[-246.80337524 128.27282715]
[-259.60476685 138.52252197]
[-274.78152466 132.30979919]
[-276.72109985 116.02574921]
[-263.42822266 106.42202759]
[-248.57746887 113.37810516]
[-233.68275452 111.60401154]
[-218.78804016 109.82991028]
[-203.89332581 108.05581665]
[-188.99861145 106.28171539]
[-174.10388184 104.50762177]
[-167.73214722 100.52735901]
[-158.74235535 102.90840149]
[-143.80160522 101.57646179]
[-128.86087036 100.24452209]
[-122.90228271 91.70260620]
[-112.98725891 87.85209656]
[-102.39286041 90.23041534]
[-94.76990509 98.27091980]
[-79.77648926 97.82642365]
[-64.78308105 97.38191986]
[-49.78966522 96.93742371]
[-34.79625320 96.49291992]
[-19.80284119 96.04842377]
[-4.80942822 95.60391998]
[10.18398380 95.15942383]
[25.17739677 94.71492004]
[40.17081070 94.27042389]
[55.16422272 93.82592010]
[70.15763092 93.38142395]
[72.90185547 80.86328125]
[81.01503754 69.67121887]
[93.78284454 62.11939621]
[109.50325012 60.12269211]
[114.72627258 46.06139755]
[109.37612152 30.93673325]
[117.98722076 17.40053749]
[133.95385742 15.83661842]
[145.02781677 27.44468307]
[142.71408081 43.32001495]
[128.78756714 51.28442383]
[123.56454468 65.34571838]
[127.84611511 71.50348663]
[139.17109680 61.66759491]
[146.64231873 48.66064072]
[161.62838745 48.01454544]
[170.19134521 60.33022308]
[164.36708069 74.15332031]
[149.57298279 76.62765503]
[136.40925598 83.81903839]
[140.69082642 89.97680664]
[155.69082642 89.97680664]
[170.69082642 89.97680664]
[185.69082642 89.97680664]
[200.69082642 89.97680664]
[211.68751526 78.62567139]
[227.49092102 78.45858002]
[238.72515869 89.57466888]
[238.72515869 105.37895203]
[227.49092102 116.49504089]
[211.68751526 116.32794952]
[200.69082642 104.97680664]
[185.69082642 104.97680664]
[170.69082642 104.97680664]
[155.69082642 104.97680664]
[140.69082642 104.97680664]
[132.13156128 115.74249268]
[121.52719879 121.70143127]
[129.15516663 134.61708069]
[136.78312683 147.53274536]
[144.41110229 160.44839478]
[152.03906250 173.36404419]
[159.66702271 186.27970886]
[167.29499817 199.19535828]
[180.55584717 209.75878906]
[174.07621765 225.42565918]
[157.22787476 223.53625488]
[154.37934875 206.82331848]
[146.75137329 193.90766907]
[139.12341309 180.99201965]
[131.49543762 168.07637024]
[123.86747742 155.16070557]
[116.23950958 142.24505615]
[108.61154175 129.32940674]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 51]
[2 50]
[3 49]
[4 48]
[5 47]
[6 46]
[7 45]
[8 44]
[9 43]
[10 42]
[11 41]
[12 40]
[14 36]
[15 35]
[16 34]
[17 32]
[18 31]
[19 30]
[20 29]
[21 28]
[22 27]
[55 63]
[56 62]
[72 87]
[73 86]
[74 85]
[75 84]
[76 83]
[89 105]
[90 104]
[91 103]
[92 102]
[93 101]
[94 100]
[95 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
