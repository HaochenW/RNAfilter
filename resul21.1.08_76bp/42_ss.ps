%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.17
%%CreationDate: Fri Jan  8 10:28:13 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUACAUCUUCCUGGGACGUGAAGUUUCACGUCCCUAACGGGAAGAUGUAUUCACCGAAUUCCGGCCUUAUACGCUUGAAUAGGCAUUCAAGCGAUGUCCUGAUUGAGGACA\
) } def
/len { sequence length } bind def

/coor [
[72.15972900 110.25325775]
[57.23068619 111.71054077]
[42.30164337 113.16783142]
[27.37260246 114.62511444]
[12.44355965 116.08240509]
[-2.48548269 117.53968811]
[-17.41452599 118.99697876]
[-32.34356689 120.45426178]
[-47.27260971 121.91155243]
[-62.20165253 123.36884308]
[-77.13069916 124.82612610]
[-92.05973816 126.28341675]
[-106.98878479 127.74069977]
[-121.81376648 130.02542114]
[-136.48886108 133.13049316]
[-151.16395569 136.23556519]
[-165.83905029 139.34065247]
[-180.51416016 142.44572449]
[-195.18925476 145.55079651]
[-209.86434937 148.65586853]
[-224.53944397 151.76095581]
[-239.21453857 154.86602783]
[-251.04331970 166.22438049]
[-266.71685791 161.40025330]
[-270.11157227 145.35632324]
[-257.73526001 134.59718323]
[-242.31962585 140.19093323]
[-227.64453125 137.08586121]
[-212.96942139 133.98077393]
[-198.29432678 130.87570190]
[-183.61923218 127.77062225]
[-168.94413757 124.66555023]
[-154.26904297 121.56047058]
[-139.59393311 118.45539093]
[-124.91883850 115.35031891]
[-123.26987457 112.91789246]
[-120.48986053 111.04183197]
[-116.80509186 110.18330383]
[-112.61423492 110.70516205]
[-108.44606781 112.81166077]
[-93.51702881 111.35437012]
[-78.58798218 109.89708710]
[-63.65893936 108.43979645]
[-48.72989655 106.98251343]
[-33.80085373 105.52522278]
[-18.87181282 104.06793213]
[-3.94277000 102.61064911]
[10.98627281 101.15335846]
[25.91531563 99.69607544]
[40.84435654 98.23878479]
[55.77339935 96.78150177]
[70.70244598 95.32421112]
[73.95336151 79.52545929]
[85.86216736 66.24864197]
[104.44699860 60.19260025]
[107.34778595 45.47576141]
[110.24857330 30.75891876]
[102.54248810 16.68782043]
[108.87169647 1.94602382]
[124.38098145 -2.15782928]
[137.17294312 7.52438688]
[137.43467712 23.56530571]
[124.96541595 33.65970612]
[122.06462860 48.37654877]
[119.16384125 63.09338760]
[124.12524414 68.71784210]
[133.72654724 57.19330978]
[142.99006653 45.39553833]
[157.47187805 49.30410767]
[159.54153442 64.16063690]
[146.68057251 71.87853241]
[134.04804993 79.96675110]
[139.00944519 85.59120178]
[153.97323608 84.54947662]
[168.93701172 83.50775146]
[183.90080261 82.46603394]
[198.86457825 81.42430878]
[213.82836914 80.38258362]
[228.79214478 79.34085846]
[243.75593567 78.29913330]
[258.71972656 77.25740814]
[272.00820923 67.64763641]
[286.86215210 74.59696198]
[288.00103760 90.95652008]
[274.25329590 99.89698792]
[259.76144409 92.22119141]
[244.79765320 93.26291656]
[229.83387756 94.30464172]
[214.87008667 95.34636688]
[199.90631104 96.38809204]
[184.94252014 97.42981720]
[169.97874451 98.47153473]
[155.01495361 99.51325989]
[140.05117798 100.55498505]
[131.91194153 114.03440094]
[120.35293579 121.58628845]
[127.54998779 134.74693298]
[134.74703979 147.90756226]
[141.94409180 161.06820679]
[149.14114380 174.22885132]
[156.33819580 187.38949585]
[171.26806641 193.26133728]
[175.84797668 208.63677979]
[166.56460571 221.72106934]
[150.53938293 222.47708130]
[140.06546021 210.32485962]
[143.17755127 194.58654785]
[135.98049927 181.42590332]
[128.78344727 168.26525879]
[121.58639526 155.10461426]
[114.38934326 141.94398499]
[107.19229126 128.78334045]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 52]
[2 51]
[3 50]
[4 49]
[5 48]
[6 47]
[7 46]
[8 45]
[9 44]
[10 43]
[11 42]
[12 41]
[13 40]
[14 35]
[15 34]
[16 33]
[17 32]
[18 31]
[19 30]
[20 29]
[21 28]
[22 27]
[55 65]
[56 64]
[57 63]
[73 94]
[74 93]
[75 92]
[76 91]
[77 90]
[78 89]
[79 88]
[80 87]
[81 86]
[96 112]
[97 111]
[98 110]
[99 109]
[100 108]
[101 107]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
