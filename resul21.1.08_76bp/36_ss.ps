%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.17
%%CreationDate: Fri Jan  8 10:28:13 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCUCUUACUUGCUUACGGGAUGUAUCCCGUGAUUAAGUAAGAGACACAACCAUAUAGGCCGAGUACCGGAAGUUCCUGACUUCCGCCGUGUGCAGGUGCACACG\
) } def
/len { sequence length } bind def

/coor [
[71.18471527 111.39541626]
[56.31544495 113.37149811]
[41.44617844 115.34758759]
[26.57691383 117.32366943]
[11.70764637 119.29975128]
[-3.16162014 121.27584076]
[-18.03088760 123.25192261]
[-32.90015411 125.22800446]
[-47.76942062 127.20409393]
[-62.63868713 129.18017578]
[-77.50794983 131.15626526]
[-92.37722015 133.13235474]
[-107.24648285 135.10842896]
[-119.90708160 144.59631348]
[-133.54272461 138.60313416]
[-148.41200256 140.57920837]
[-163.28126526 142.55529785]
[-178.15052795 144.53138733]
[-193.01979065 146.50747681]
[-207.88906860 148.48355103]
[-222.75833130 150.45964050]
[-237.62759399 152.43572998]
[-250.28869629 162.85823059]
[-265.54837036 156.85205078]
[-267.70877075 140.59582520]
[-254.54747009 130.81257629]
[-239.60368347 137.56645203]
[-224.73442078 135.59037781]
[-209.86514282 133.61428833]
[-194.99588013 131.63819885]
[-180.12661743 129.66212463]
[-165.25733948 127.68603516]
[-150.38807678 125.70994568]
[-135.51881409 123.73386383]
[-123.92176819 114.38732147]
[-109.22257233 120.23916626]
[-94.35330200 118.26308441]
[-79.48403931 116.28699493]
[-64.61476898 114.31091309]
[-49.74550629 112.33482361]
[-34.87623978 110.35874176]
[-20.00697136 108.38265991]
[-5.13770485 106.40657043]
[9.73156166 104.43048859]
[24.60082817 102.45439911]
[39.47009659 100.47831726]
[54.33936310 98.50223541]
[69.20862579 96.52614594]
[70.52787018 84.04999542]
[77.03308868 72.23112488]
[88.33512115 63.24612427]
[103.13531494 59.03462601]
[105.32946777 44.19597244]
[96.95972443 30.50922966]
[102.57719421 15.48180103]
[117.87262726 10.64144325]
[131.11268616 19.70126343]
[132.14073181 35.71134567]
[120.16812134 46.39012146]
[117.97397614 61.22877884]
[123.23820496 66.57086182]
[132.27778625 54.60064697]
[137.83439636 40.66780853]
[152.53747559 37.69804764]
[163.06623840 48.38192368]
[159.88177490 63.03999710]
[145.86828613 68.39215088]
[133.76666260 77.25503540]
[139.03089905 82.59711456]
[153.90016174 80.62103271]
[168.76943970 78.64494324]
[183.63870239 76.66886139]
[198.50796509 74.69277954]
[213.37722778 72.71669006]
[228.24650574 70.74060822]
[243.11576843 68.76452637]
[258.02032471 60.68424988]
[269.91079712 72.76947784]
[261.58947754 87.54080200]
[245.09185791 83.63378906]
[230.22257996 85.60987091]
[215.35331726 87.58596039]
[200.48405457 89.56204224]
[185.61477661 91.53813171]
[170.74551392 93.51421356]
[155.87625122 95.49029541]
[141.00698853 97.46638489]
[133.80915833 112.47116089]
[122.27853394 121.53702545]
[130.21902466 134.26292419]
[138.15950012 146.98883057]
[146.09999084 159.71473694]
[154.04048157 172.44064331]
[161.98097229 185.16654968]
[169.92144775 197.89245605]
[184.64247131 205.11904907]
[185.47444153 221.49708557]
[171.56150818 230.17822266]
[157.21611023 222.23207092]
[157.19555664 205.83294678]
[149.25506592 193.10704041]
[141.31457520 180.38113403]
[133.37408447 167.65522766]
[125.43360138 154.92932129]
[117.49311066 142.20341492]
[109.55262756 129.47750854]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 48]
[2 47]
[3 46]
[4 45]
[5 44]
[6 43]
[7 42]
[8 41]
[9 40]
[10 39]
[11 38]
[12 37]
[13 36]
[15 34]
[16 33]
[17 32]
[18 31]
[19 30]
[20 29]
[21 28]
[22 27]
[52 60]
[53 59]
[69 87]
[70 86]
[71 85]
[72 84]
[73 83]
[74 82]
[75 81]
[76 80]
[89 106]
[90 105]
[91 104]
[92 103]
[93 102]
[94 101]
[95 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
