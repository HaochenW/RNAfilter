%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.17
%%CreationDate: Fri Jan  8 10:28:12 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUACGGUUGUAAACGGCAGUAAAACGUUACUGCCGUGCCCUACAACCGUAGCGCAGUGUCCAACACAAAGAAAACAUCGCUCAAGAUGACUAUUUGAAACAAAUAG\
) } def
/len { sequence length } bind def

/coor [
[70.55761719 107.50000000]
[55.55761719 107.50000000]
[40.55761719 107.50000000]
[25.55761909 107.50000000]
[10.55761909 107.50000000]
[-4.44238138 107.50000000]
[-19.44238091 107.50000000]
[-34.44238281 107.50000000]
[-49.44238281 107.50000000]
[-64.44238281 107.50000000]
[-79.44238281 107.50000000]
[-94.44238281 107.50000000]
[-112.08368683 119.47927094]
[-129.74687195 108.97325134]
[-144.68980408 110.28058624]
[-159.63272095 111.58792114]
[-174.57563782 112.89526367]
[-189.51855469 114.20259857]
[-204.46148682 115.50993347]
[-219.40440369 116.81726837]
[-234.34732056 118.12460327]
[-249.29023743 119.43193817]
[-264.23315430 120.73928070]
[-277.34887695 130.58355713]
[-292.32388306 123.89914703]
[-293.75317383 107.56240082]
[-280.16641235 98.37916565]
[-265.54049683 105.79635620]
[-250.59757996 104.48902130]
[-235.65466309 103.18168640]
[-220.71173096 101.87435150]
[-205.76881409 100.56700897]
[-190.82589722 99.25967407]
[-175.88298035 97.95233917]
[-160.94004822 96.64500427]
[-145.99713135 95.33766937]
[-131.05421448 94.03033447]
[-126.37762451 86.16705322]
[-118.44038391 81.34344482]
[-109.02904510 80.79782867]
[-100.33459473 84.78784943]
[-94.44238281 92.50000000]
[-79.44238281 92.50000000]
[-64.44238281 92.50000000]
[-49.44238281 92.50000000]
[-34.44238281 92.50000000]
[-19.44238091 92.50000000]
[-4.44238138 92.50000000]
[10.55761909 92.50000000]
[25.55761909 92.50000000]
[40.55761719 92.50000000]
[55.55761719 92.50000000]
[70.55761719 92.50000000]
[73.95124054 79.71237183]
[83.00716400 68.65879822]
[96.76656342 61.85088730]
[113.17143250 61.25743484]
[119.90341949 47.85294724]
[126.63540649 34.44845581]
[133.36738586 21.04396629]
[135.07276917 4.17600870]
[151.75363159 1.14522934]
[159.28367615 16.33518028]
[146.77188110 27.77595520]
[140.03988647 41.18044281]
[133.30790710 54.58493423]
[126.57592010 67.98942566]
[130.23106384 74.53846741]
[142.56538391 66.00240326]
[151.17628479 53.72020721]
[166.15661621 54.48798370]
[173.46672058 67.58617401]
[166.25549316 80.73905182]
[151.28175354 81.61982727]
[137.54133606 87.63655090]
[141.19647217 94.18559265]
[156.13938904 95.49293518]
[171.08230591 96.80027008]
[186.02523804 98.10760498]
[197.96939087 87.75808716]
[213.72721863 88.96898651]
[223.94989014 101.02190399]
[222.57244873 116.76605225]
[210.41212463 126.86071014]
[194.68342590 125.31689453]
[184.71789551 113.05052185]
[169.77497864 111.74318695]
[154.83206177 110.43585205]
[139.88912964 109.12851715]
[131.09074402 117.44686127]
[121.21638489 121.74784851]
[128.71638489 134.73823547]
[136.21638489 147.72860718]
[143.71638489 160.71899414]
[151.21638489 173.70938110]
[158.71638489 186.69975281]
[166.21638489 199.69013977]
[179.37223816 210.38406372]
[172.73812866 225.98614502]
[155.90928650 223.93040466]
[153.22599792 207.19013977]
[145.72599792 194.19975281]
[138.22599792 181.20938110]
[130.72599792 168.21899414]
[123.22599792 155.22860718]
[115.72599792 142.23823547]
[108.22599792 129.24784851]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 53]
[2 52]
[3 51]
[4 50]
[5 49]
[6 48]
[7 47]
[8 46]
[9 45]
[10 44]
[11 43]
[12 42]
[14 37]
[15 36]
[16 35]
[17 34]
[18 33]
[19 32]
[20 31]
[21 30]
[22 29]
[23 28]
[57 67]
[58 66]
[59 65]
[60 64]
[76 89]
[77 88]
[78 87]
[79 86]
[91 107]
[92 106]
[93 105]
[94 104]
[95 103]
[96 102]
[97 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
